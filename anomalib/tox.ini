[tox]
isolated_build = True
skip_missing_interpreters = true
envlist =
    pre-commit
    pre_merge
    nightly
    snyk-scan

[testenv]
passenv = ftp_proxy
    HTTP_PROXY
    HTTPS_PROXY
    CUDA_VISIBLE_DEVICES

[testenv:pre-commit]
basepython = py310
deps =
    pre-commit
commands = pre-commit run --all-files

[testenv:pre-merge-py{38,39,310}]
passenv = {[testenv]deps}
    ANOMALIB_DATASET_PATH
deps =
    coverage[toml]
    pytest
    pytest-cov
    pytest-order
    flaky
    nbmake
    -r{toxinidir}/requirements/base.txt
    -r{toxinidir}/requirements/openvino.txt
    -r{toxinidir}/requirements/loggers.txt
    -r{toxinidir}/requirements/notebooks.txt

commands =
    ; 1. Run Coverage First.
    pytest tests/pre_merge \
        --cov=anomalib \
        --cov-report=xml:{toxworkdir}/coverage.xml \
        --cov-fail-under=70 \
        {posargs}

    ; 2. Test Jupyter Notebooks.
    pytest --nbmake notebooks \
        --ignore=notebooks/300_benchmarking \
        --ignore=notebooks/400_openvino \
        --ignore=notebooks/500_use_cases/501_dobot

[testenv:nightly]
basepython = py310
passenv = {[testenv]deps}
    ANOMALIB_DATASET_PATH
deps =
    coverage
    pytest
    flaky
    -r{toxinidir}/requirements/base.txt
    -r{toxinidir}/requirements/openvino.txt
    -r{toxinidir}/requirements/loggers.txt
    -r{toxinidir}/requirements/notebooks.txt
commands =
    coverage erase
    coverage run --include=anomalib/* -m pytest tests/nightly/
    coverage report -m --fail-under=33
    coverage xml -o {toxworkdir}/coverage.xml

[testenv:trivy-scan]
basepython = py310
passenv = TRIVY_DOWNLOAD_URL
allowlist_externals =
    bash
    curl
    tar
    rm
    *trivy*
    cat
install_command = pip install --no-cache-dir {opts} {packages}
deps =
    -r{toxinidir}/requirements/base.txt
    -r{toxinidir}/requirements/openvino.txt
    -r{toxinidir}/requirements/loggers.txt
    -r{toxinidir}/requirements/notebooks.txt
commands =
    bash -c "pip freeze > requirements.txt"
    curl -L0 {env:TRIVY_DOWNLOAD_URL} -o {toxworkdir}/trivy.tar.gz
    tar -xzf {toxworkdir}/trivy.tar.gz -C {toxworkdir}
    {toxworkdir}/trivy fs -c .ci/trivy.yaml -o {toxworkdir}/trivy-scan-results.txt ./requirements.txt
    {toxworkdir}/trivy fs -c .ci/trivy.yaml --format spdx-json -o {toxworkdir}/trivy-spdx-anomalib.json ./requirements.txt
    cat {toxworkdir}/trivy-scan-results.txt
    rm {toxworkdir}/trivy.tar.gz
    rm {toxworkdir}/trivy
    rm requirements.txt

[testenv:bandit-scan]
skip_install = true
deps =
    bandit
allowlist_externals =
    bandit
commands =
    - bandit -r -c {toxinidir}/.ci/ipas_default.config {toxinidir}/ -f txt -o {toxworkdir}/bandit-report.txt
